#!/bin/bash

if [ -e ./secrets/coveralls.gpg ]; then
  COVERALLS_REPO_TOKEN="$(gpg -d -q secrets/coveralls.gpg)"
  OPENAI_API_KEY="$(gpg -d -q secrets/openai_api_key.gpg)"
  SONAR_HOST_URL='https://sonarcloud.io'
  SONAR_TOKEN="$(gpg -d -q secrets/sonar-token.gpg)"

  export COVERALLS_REPO_TOKEN
  export OPENAI_API_KEY
  export SONAR_HOST_URL
  export SONAR_TOKEN

  {
    echo "COVERALLS_REPO_TOKEN=${COVERALLS_REPO_TOKEN}"
    echo "OPENAI_API_KEY=${OPENAI_API_KEY}"
    echo "SONAR_HOST_URL=${SONAR_HOST_URL}"
    echo "SONAR_TOKEN=${SONAR_TOKEN}"
  } >> .env
fi
GNUPGHOME="$(pwd)/.gnupg"
LANGCHAIN_TRACING_V2=true
LANGCHAIN_ENDPOINT="https://api.smith.langchain.com"
LANGCHAIN_API_KEY="$(gpg -d -q secrets/langchain-api.gpg)"
LANGCHAIN_PROJECT="k8s-operator-agent"
PIPENV_VENV_IN_PROJECT=1

export GNUPGHOME
export LANGCHAIN_TRACING_V2
export LANGCHAIN_ENDPOINT
export LANGCHAIN_API_KEY
export LANGCHAIN_PROJECT
export PIPENV_VENV_IN_PROJECT

{
  echo "GNUPGHOME=${GNUPGHOME}"
  echo "LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}"
  echo "LANGCHAIN_ENDPOINT=${LANGCHAIN_ENDPOINT}"
  echo "LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}"
  echo "LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}"
  echo "PIPENV_VENV_IN_PROJECT=${PIPENV_VENV_IN_PROJECT}"
} >> .env
